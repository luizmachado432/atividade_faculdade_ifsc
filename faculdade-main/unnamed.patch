Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
--- /dev/null	(revision d82960a6e2188a146d389112b5d6199b7cf073e5)
+++ b/.idea/.gitignore	(revision d82960a6e2188a146d389112b5d6199b7cf073e5)
@@ -0,0 +1,8 @@
+# Default ignored files
+/shelf/
+/workspace.xml
+# Editor-based HTTP Client requests
+/httpRequests/
+# Datasource local storage ignored files
+/dataSources/
+/dataSources.local.xml
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
--- /dev/null	(revision d82960a6e2188a146d389112b5d6199b7cf073e5)
+++ b/.idea/misc.xml	(revision d82960a6e2188a146d389112b5d6199b7cf073e5)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectRootManager" version="2" project-jdk-name="openjdk-22" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
--- /dev/null	(revision d82960a6e2188a146d389112b5d6199b7cf073e5)
+++ b/.idea/modules.xml	(revision d82960a6e2188a146d389112b5d6199b7cf073e5)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/faculdade-main.iml" filepath="$PROJECT_DIR$/faculdade-main.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	(revision d82960a6e2188a146d389112b5d6199b7cf073e5)
+++ b/.idea/vcs.xml	(revision d82960a6e2188a146d389112b5d6199b7cf073e5)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/README.md b/README.md
new file mode 100644
--- /dev/null	(revision d82960a6e2188a146d389112b5d6199b7cf073e5)
+++ b/README.md	(revision d82960a6e2188a146d389112b5d6199b7cf073e5)
@@ -0,0 +1,3 @@
+# faculdade
+projetos feitos na faculdade de ADS IFSC.
+OBS: nesses exercicios não estou buscando uma maneira mais prática de se fazer, estou fazendo os codigos de acordo com oque a faculdade fala para fazer.
Index: estruturas_repetiçao/exercicio2.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/estruturas_repetiçao/exercicio2.java b/estruturas_repetiçao/exercicio2.java
new file mode 100644
--- /dev/null	(revision d82960a6e2188a146d389112b5d6199b7cf073e5)
+++ b/estruturas_repetiçao/exercicio2.java	(revision d82960a6e2188a146d389112b5d6199b7cf073e5)
@@ -0,0 +1,40 @@
+import java.util.Date;
+import java.util.Deque;
+import java.util.Scanner;
+
+public class exercicio2 {
+    public static void main(String[] args) {
+        Scanner teste = new Scanner(System.in);
+        System.out.printf("digite um numero de 1 a 7 para saber seu correspondente no dia da semana: ");
+        String n = teste.nextLine();
+        System.out.println(n);
+
+        switch (n){
+            case "1":
+                System.out.printf("domingo");
+                break;
+            case "2":
+                System.out.printf("segunda");
+                break;
+            case "3":
+                System.out.printf("terça");
+                break;
+            case "4":
+                System.out.printf("quarta");
+                break;
+            case "5":
+                System.out.printf("quinta");
+                break;
+            case "6":
+                System.out.printf("sexta");
+                break;
+            case "7":
+                System.out.printf("sabado");
+                break;
+            default:
+                System.out.printf("escolha um numero dentro da margem");
+                break;
+        }
+
+    }
+}
Index: estruturas_repetiçao/exercicio4.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/estruturas_repetiçao/exercicio4.java b/estruturas_repetiçao/exercicio4.java
new file mode 100644
--- /dev/null	(revision d82960a6e2188a146d389112b5d6199b7cf073e5)
+++ b/estruturas_repetiçao/exercicio4.java	(revision d82960a6e2188a146d389112b5d6199b7cf073e5)
@@ -0,0 +1,34 @@
+import java.util.Scanner;
+
+public class exercicio4 {
+    public static void main(String[] args) {
+        Scanner genero = new Scanner(System.in);
+        System.out.printf("escolha um genero entre: \n terror=T \n comedia=C \n açao=A \n aventura=AV: ");
+        String tipos = genero.nextLine();
+
+
+        switch (tipos){
+            case "T":
+                System.out.printf("recomendo 'I.T a coisa'");
+                break;
+            case "C":
+                System.out.printf("recomendo 'Gente grande 2'");
+                break;
+            case "A":
+                System.out.printf("recomendo 'Esquadrao 6'");
+                break;
+            case "AV":
+                System.out.printf("recomendo 'As aventuras de Pi'");
+                break;
+            default:
+                System.out.printf("escolha um genero dentro do catalogo");
+
+
+
+
+
+
+
+        }
+    }
+}
Index: estruturas_repetiçao/exercicio5.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/estruturas_repetiçao/exercicio5.java b/estruturas_repetiçao/exercicio5.java
new file mode 100644
--- /dev/null	(revision d82960a6e2188a146d389112b5d6199b7cf073e5)
+++ b/estruturas_repetiçao/exercicio5.java	(revision d82960a6e2188a146d389112b5d6199b7cf073e5)
@@ -0,0 +1,24 @@
+import java.util.Scanner;
+
+public class exercicio5 {
+    public static void main(String[] args) {
+        Scanner entrada = new Scanner(System.in);
+        System.out.printf("digite sua idade para saber sua faixa etaria: ");
+        int idade = entrada.nextInt();
+        switch (idade){
+            case 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17:
+                System.out.printf("menor de idade");
+                break;
+            case 18,19,20,21,22,23,24,25:
+                System.out.printf("maior de idade");
+                break;
+
+            case 26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59:
+                System.out.printf("adulto");
+                break;
+            default:
+                System.out.printf("idoso");
+
+        }
+    }
+}
Index: estruturas_repetiçao/exercicio6.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/estruturas_repetiçao/exercicio6.java b/estruturas_repetiçao/exercicio6.java
new file mode 100644
--- /dev/null	(revision d82960a6e2188a146d389112b5d6199b7cf073e5)
+++ b/estruturas_repetiçao/exercicio6.java	(revision d82960a6e2188a146d389112b5d6199b7cf073e5)
@@ -0,0 +1,29 @@
+import java.util.Scanner;
+
+public class exercicio6 {
+    public static void main(String[] args) {
+        Scanner dia = new Scanner(System.in);
+
+        System.out.println("Digite um numero correspondente a um dia da semana (1-7): ");
+        int numero = dia.nextInt();
+        switch (numero){
+            case 1:
+                System.out.printf("domingo: assistir um filminho");
+            case 2:
+                System.out.printf("segunda: caminhada");
+            case 3:
+                System.out.printf("terça: boliche");
+            case 4:
+                System.out.printf("quarta: corrida");
+            case 5:
+                System.out.printf("quinta: nataçao");
+            case 6:
+                System.out.printf("sexta: tenis");
+            case 7:
+                System.out.printf("pescar");
+            default:
+                System.out.printf("escolha um numero de 1 a 7");
+
+        }
+    }
+}
Index: exercicios_String/ex1.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/exercicios_String/ex1.java b/exercicios_String/ex1.java
new file mode 100644
--- /dev/null	(revision d82960a6e2188a146d389112b5d6199b7cf073e5)
+++ b/exercicios_String/ex1.java	(revision d82960a6e2188a146d389112b5d6199b7cf073e5)
@@ -0,0 +1,13 @@
+public class ex1 {
+    public static void main(String[] args) {
+        int[] numeros = {3, 2, 5};
+        int soma = 0;
+        System.out.println(contaNumero(numeros, soma));
+    }
+    static int contaNumero(int[] numeros, int soma) {
+        for (int i = 0; i < numeros.length; i++) {
+            soma = soma + numeros[i];
+        }
+        return soma;
+    }
+}
Index: exercicios_String/ex2.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/exercicios_String/ex2.java b/exercicios_String/ex2.java
new file mode 100644
--- /dev/null	(revision d82960a6e2188a146d389112b5d6199b7cf073e5)
+++ b/exercicios_String/ex2.java	(revision d82960a6e2188a146d389112b5d6199b7cf073e5)
@@ -0,0 +1,13 @@
+public class ex2 {
+    public static void main(String[] args) {
+        int[] numeros = {3, 2, 5};
+        int soma = 0;
+        System.out.println(contaNumero(numeros, soma));
+    }
+    static int contaNumero(int[] numeros, int soma) {
+        for (int i = 0; i < numeros.length; i++) {
+            soma = soma + numeros[i];
+        }
+        return soma;
+    }
+}
Index: exercicios_String/ex3.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/exercicios_String/ex3.java b/exercicios_String/ex3.java
new file mode 100644
--- /dev/null	(revision d82960a6e2188a146d389112b5d6199b7cf073e5)
+++ b/exercicios_String/ex3.java	(revision d82960a6e2188a146d389112b5d6199b7cf073e5)
@@ -0,0 +1,18 @@
+public class ex3 {
+    public static void main(String[] args) {
+        int[] notas = {5,2,7,5};
+        double media = 0;
+        System.out.println(calcularMedia(notas, media ));
+
+    }
+
+    static double calcularMedia(int[] notas, double media) {
+        for (int i = 0; i < notas.length; i++) {
+            media += notas[i];
+
+        }
+        media = media / notas.length;
+        return media;
+    }
+
+}
Index: exercicios_String/ex4.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/exercicios_String/ex4.java b/exercicios_String/ex4.java
new file mode 100644
--- /dev/null	(revision d82960a6e2188a146d389112b5d6199b7cf073e5)
+++ b/exercicios_String/ex4.java	(revision d82960a6e2188a146d389112b5d6199b7cf073e5)
@@ -0,0 +1,20 @@
+public class ex4 {
+    public static void main(String[] args) {
+
+        int[] numeros = {4,19,3,8};
+        int maiorNumero = numeros[0];
+        System.out.println(pegaMaior(numeros, maiorNumero));
+    }
+
+
+    static int pegaMaior(int [] numeros, int maiorNumero){
+
+        for (int i = 0; i < numeros.length; i++){
+            if (numeros[i] > maiorNumero){
+                maiorNumero = numeros[i];
+            }
+        }
+        return maiorNumero;
+    }
+
+}
Index: exercicios_String/ex5.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/exercicios_String/ex5.java b/exercicios_String/ex5.java
new file mode 100644
--- /dev/null	(revision d82960a6e2188a146d389112b5d6199b7cf073e5)
+++ b/exercicios_String/ex5.java	(revision d82960a6e2188a146d389112b5d6199b7cf073e5)
@@ -0,0 +1,18 @@
+public class ex5 {
+    public static void main(String[] args) {
+
+        String palavra = "cavalo";
+        int numerosVogais= 0;
+        System.out.println(contaVogais(palavra,numerosVogais));
+    }
+
+    static int contaVogais (String palavra, int numerosVogais){
+        for (int i = 0; i < palavra.length(); i++) {
+            char letra = palavra.charAt(i);
+            if (letra == 'a' || letra == 'e' || letra == 'i' || letra == 'o' || letra == 'u') {
+                numerosVogais++;
+            }
+        }
+        return numerosVogais;
+    }
+}
Index: exercicios_String/ex6.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/exercicios_String/ex6.java b/exercicios_String/ex6.java
new file mode 100644
--- /dev/null	(revision d82960a6e2188a146d389112b5d6199b7cf073e5)
+++ b/exercicios_String/ex6.java	(revision d82960a6e2188a146d389112b5d6199b7cf073e5)
@@ -0,0 +1,28 @@
+import java.util.Scanner;
+
+class Ex6 {
+    public static void main(String[] args) {
+        Scanner scanner = new Scanner(System.in);
+
+        System.out.print("Digite o caractere a ser contado: ");
+        char caracter = scanner.next().charAt(0); // Lê o primeiro caractere da entrada
+        String palavra = "cavalovoador";
+
+        int numerosLetras = contadorDeCaracteres(palavra, caracter);
+
+        System.out.println("Número de ocorrências do caractere: " + numerosLetras);
+    }
+
+    static int contadorDeCaracteres(String palavra, char caracter) {
+        int numerosLetras = 0;
+
+        for (int i = 0; i < palavra.length(); i++) {
+            if (caracter == palavra.charAt(i)) {
+                numerosLetras++;
+            }
+        }
+
+        return numerosLetras;
+    }
+}
+
Index: exercicios_String/ex7.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/exercicios_String/ex7.java b/exercicios_String/ex7.java
new file mode 100644
--- /dev/null	(revision d82960a6e2188a146d389112b5d6199b7cf073e5)
+++ b/exercicios_String/ex7.java	(revision d82960a6e2188a146d389112b5d6199b7cf073e5)
@@ -0,0 +1,15 @@
+public class ex7 {
+    public static void main(String[] args) {
+        String palavra = "cavalhoVoador";
+        System.out.println(PalavraInvertid(palavra));
+    }
+
+    static String PalavraInvertid(String palavra) {
+        String PalavraInvertida = "";
+        for (int i = palavra.length() -1; i >=0; i--) {
+            PalavraInvertida = PalavraInvertida + palavra.charAt(i);
+        }
+        return PalavraInvertida;
+    }
+
+}
Index: exercicios_String/ex8.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/exercicios_String/ex8.java b/exercicios_String/ex8.java
new file mode 100644
--- /dev/null	(revision d82960a6e2188a146d389112b5d6199b7cf073e5)
+++ b/exercicios_String/ex8.java	(revision d82960a6e2188a146d389112b5d6199b7cf073e5)
@@ -0,0 +1,27 @@
+public class ex8 {
+    public static void main(String[] args) {
+        String palavra = "cavalhoAlado";
+        System.out.println(palindromo(palavra));
+    }
+
+
+    static boolean palindromo(String palavra) {
+        boolean simNao = false;
+        String palavraComparacao = PalavraInvertid(palavra);
+        if(palavra.equalsIgnoreCase(palavraComparacao)){
+            simNao = true;
+        }
+        return simNao;
+    }
+
+
+    static String PalavraInvertid(String palavra) {
+        String PalavraInvertida = "";
+        for (int i = palavra.length() -1; i >=0; i--) {
+            PalavraInvertida = PalavraInvertida + palavra.charAt(i);
+        }
+        return PalavraInvertida;
+    }
+
+
+}
Index: exercicios_String/ex9.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/exercicios_String/ex9.java b/exercicios_String/ex9.java
new file mode 100644
--- /dev/null	(revision d82960a6e2188a146d389112b5d6199b7cf073e5)
+++ b/exercicios_String/ex9.java	(revision d82960a6e2188a146d389112b5d6199b7cf073e5)
@@ -0,0 +1,18 @@
+import java.util.Scanner;
+
+public class ex9 {
+    public static void main(String[] args) {
+        Scanner sc = new Scanner(System.in);
+        int [] numeros = new int [3];
+
+    }
+
+    static int fill(int numeros){
+        for(int i = 0; i < numeros; i++) {
+            numeros[]=sc.nextint();
+
+        }
+
+        return numeros;
+    }
+}
Index: exercicios_String/exercicios_String.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/exercicios_String/exercicios_String.iml b/exercicios_String/exercicios_String.iml
new file mode 100644
--- /dev/null	(revision d82960a6e2188a146d389112b5d6199b7cf073e5)
+++ b/exercicios_String/exercicios_String.iml	(revision d82960a6e2188a146d389112b5d6199b7cf073e5)
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: exercicios_String/src/exercicio_1.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/exercicios_String/src/exercicio_1.java b/exercicios_String/src/exercicio_1.java
new file mode 100644
--- /dev/null	(revision d82960a6e2188a146d389112b5d6199b7cf073e5)
+++ b/exercicios_String/src/exercicio_1.java	(revision d82960a6e2188a146d389112b5d6199b7cf073e5)
@@ -0,0 +1,22 @@
+import java.util.Scanner;
+
+public class exercicio_1 {
+    public static void main(String[] args) {
+        Scanner entrada = new Scanner(System.in);
+
+
+        System.out.println("digite a palavra que deseja contar: ");
+
+
+        String nome = entrada.nextLine();
+        int tamanhoDaString =nome.length();
+        System.out.println(tamanhoDaString);
+
+
+
+
+
+
+
+    }
+}
\ No newline at end of file
Index: exercicios_String/src/exercicio_2.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/exercicios_String/src/exercicio_2.java b/exercicios_String/src/exercicio_2.java
new file mode 100644
--- /dev/null	(revision d82960a6e2188a146d389112b5d6199b7cf073e5)
+++ b/exercicios_String/src/exercicio_2.java	(revision d82960a6e2188a146d389112b5d6199b7cf073e5)
@@ -0,0 +1,25 @@
+import java.util.Scanner;
+
+public class exercicio_2 {
+    public static void main(String[] args) {
+        Scanner entrada = new Scanner(System.in);
+
+
+        System.out.println("digite sua palavra pra verificar se é um palindromo: ");
+
+        String palavra = entrada.nextLine().toLowerCase().replace(" ", "");
+
+        String palavraInvertida = new StringBuilder(palavra).reverse().toString().toLowerCase();
+
+        boolean verdadeiroFalso = false;
+
+        if (palavra.equals(palavraInvertida)) {
+            verdadeiroFalso = true;
+        }
+
+
+        System.out.println(verdadeiroFalso);
+
+
+    }
+}
Index: exercicios_String/src/exercicio_3.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/exercicios_String/src/exercicio_3.java b/exercicios_String/src/exercicio_3.java
new file mode 100644
--- /dev/null	(revision d82960a6e2188a146d389112b5d6199b7cf073e5)
+++ b/exercicios_String/src/exercicio_3.java	(revision d82960a6e2188a146d389112b5d6199b7cf073e5)
@@ -0,0 +1,34 @@
+import java.util.Locale;
+import java.util.Scanner;
+
+public class exercicio_3 {
+    public static void main(String[] args) {
+        System.out.println("digita sua palavra pra contar vogais: ");
+        Scanner entrada = new Scanner(System.in);
+        int contador = 0;
+        String palavra = entrada.nextLine();
+        String palavra_min =palavra.toLowerCase();
+
+        for (int i = 0; i < palavra.length(); i++) {
+
+            if (palavra.charAt(i) == 'a') {
+                contador++;
+            }
+            else if (palavra.charAt(i) == 'e') {
+                contador++;
+            }
+            else if (palavra.charAt(i) == 'i') {
+                contador++;
+            }
+            else if (palavra.charAt(i) == 'o') {
+                contador++;
+            }
+            else if (palavra.charAt(i) == 'u') {
+                contador++;
+            }
+
+        }
+        System.out.println(contador);
+    }
+
+}
Index: exercicios_String/src/exercicio_4.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/exercicios_String/src/exercicio_4.java b/exercicios_String/src/exercicio_4.java
new file mode 100644
--- /dev/null	(revision d82960a6e2188a146d389112b5d6199b7cf073e5)
+++ b/exercicios_String/src/exercicio_4.java	(revision d82960a6e2188a146d389112b5d6199b7cf073e5)
@@ -0,0 +1,19 @@
+import java.util.Locale;
+import java.util.Scanner;
+
+public class exercicio_4 {
+    public static void main(String[] args) {
+
+        Scanner frase = new Scanner(System.in);
+        System.out.println("digite uma frase pra compactar: ");
+
+        String compactador= frase.nextLine();
+
+        String compactador_min = compactador.toLowerCase();
+
+        String compactadp = compactador_min.replace( " ", "" );
+
+        System.out.println(compactadp);
+
+    }
+}
Index: exercicios_String/src/exercicio_5.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/exercicios_String/src/exercicio_5.java b/exercicios_String/src/exercicio_5.java
new file mode 100644
--- /dev/null	(revision d82960a6e2188a146d389112b5d6199b7cf073e5)
+++ b/exercicios_String/src/exercicio_5.java	(revision d82960a6e2188a146d389112b5d6199b7cf073e5)
@@ -0,0 +1,17 @@
+import java.util.Scanner;
+
+public class exercicio_5 {
+    public static void main(String[] args) {
+
+        Scanner frase = new Scanner(System.in);
+        System.out.println("digite uma frase pra substituir os espaços: ");
+
+        String palavra= frase.nextLine();
+
+        String palavra_min = palavra.toLowerCase();
+
+        String substituido = palavra_min.replace( " ", "-" );
+
+        System.out.println(substituido);
+    }
+}
Index: exercicios_String/src/exercicio_6.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/exercicios_String/src/exercicio_6.java b/exercicios_String/src/exercicio_6.java
new file mode 100644
--- /dev/null	(revision d82960a6e2188a146d389112b5d6199b7cf073e5)
+++ b/exercicios_String/src/exercicio_6.java	(revision d82960a6e2188a146d389112b5d6199b7cf073e5)
@@ -0,0 +1,5 @@
+public class exercicio_6 {
+    public static void main(String[] args) {
+
+    }
+}
Index: faculdade-main.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/faculdade-main.iml b/faculdade-main.iml
new file mode 100644
--- /dev/null	(revision d82960a6e2188a146d389112b5d6199b7cf073e5)
+++ b/faculdade-main.iml	(revision d82960a6e2188a146d389112b5d6199b7cf073e5)
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$" isTestSource="false" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
diff --git a/exercicios_String/out/production/exercicios_String/exercicio_1.class b/exercicios_String/out/production/exercicios_String/exercicio_1.class
new file mode 100644
index 0000000000000000000000000000000000000000..088d4010a5d182c430ab8ccca6a59d4007fe4579
GIT binary patch
literal 924
zc${rhU2hUW6g^XDmyfNbP%2i@tx{duTCCre+J|aPNbn=UkQg7#uuSNXWfqsAsgM37
z`#=*-`~m(b<DG>@nz9dbGxwf*&Y8P2fBydb4d4(5Da;{eA#P(H3k;bqKjsymt4`&8
zt1CRsu&^(c)CUYPx7@UlU|5boLoNME!{bVcFo_h>7Hk`fxN?D|@ok_*k6}(KhI~CL
z$e>bF{h@B?Q1D(g1q&IYzsyi@XF|$NqmZ+)f;<@shI*RpLnzfbGJ&fMrMB!yEgbIj
zxzCS7?tC2zr!5Ae%N;LJnumK%3fHh^;ku0*C^F<`urXMDv-6GjiL>#kG^IOa%Xq(K
z!@)X3LWvVymr5|KxaG^}6z-s8VZ+8<+`BlW2tcFuh3e>|Xw)_1uWZb1GQ{1Qnf*3H
zTAYZ`lb#H|>{9+!&?dPhqxx>xYl-k9Z~2tT)&r0GO&&_KpCse@NDdel>r)(6O82<=
zIjipHStq1A4?EPBn^C3#38h2c=2Wj=x)z391-;16jNT>9dt4m_ule}^SdAgo2!^32
z-biCPGi7zhP+%QfbY;yq2WBoUt@mkHp~xuCZ=Qkuh{`*(E=0)~l>vJUzys`3OyVIP
zO`5+GB2IDR7pzaGNS@J1Pm#^8j!@Vd;pW@z5pEw)rZ|H8pL~tz4PhDy<Y+CBM3J6A
n3HeBHb4-fIctSBv_@{VAk_Ey%#|vU9Qs*A3B+sxP@xJ^A0>#X$

diff --git a/exercicios_String/out/production/exercicios_String/exercicio_2.class b/exercicios_String/out/production/exercicios_String/exercicio_2.class
new file mode 100644
index 0000000000000000000000000000000000000000..b77bee41c0d7d2e1aed14e97de3e49afb4149326
GIT binary patch
literal 1327
zc${@p+foxj5IsWz8^R(XTm{hpiV3%PK~RE%fG83!8pHx0tYI_4=w>%gb`d|tPw){Q
zLX}qe;+ucq&!|0{ScMQ%o9UVE)7__gdVc)+@(sW|UPe)ekb$s?dNeS^-tq&Uwz;#H
zUf+EyERUgKMmo}azz|BNwhTlVS_6>pNjsghxZ?=bh$xy2m?oNW;h!kEk0nnO80w_M
z(2)%c(oHWrMc>PLO7KD^3Ij2nzm=goSrd}l(iz%Jw4;NFxW0Ef*oKnMUt|Pb43l}e
zCq0oU`8-kNHa}1#>3<-Ud?PKc5+#xN{yE_nv{^cN<rduOL=+d%W1!c>CG;`0)rikv
z6!pp0)l|7w>hwsxM?`fsS4<?(&k%9Mp_i48U}#UK&ZDCk#8m^=Oblsw>@0wx$#b*r
z2cZ^tNkoujV2KEZ8K7N9O^jijC@E32xkXtPPg7dh=PD=O`@*qA=70JctPI>>=sK&O
z_obZ|DvC62>C5WVy9pC_Fc~nQ-j;|#Z;d*ut{Lrd*TlV`HJ)2B>OwLmW^kWIjaYHJ
zbf&eHLCmCf^!?20%b8;cCwKHT&QpuTp-`5zr2G07=@;BQ(P+_KU-JvQLT&P0n>6vP
zYjJyvE2+;_W!T%7l&(2@Dn^FX1+K@nGx@644U?U#J#uTSVWwUP$5TAd$(}v;P_(@|
zk(yEs_gK}u>`+HNspGWJF3<BqDtC$6<I)uD5b2!9t#_-u7}R25g&~@AePxLyscVa!
zs%cy&LO&kTYuCRzF#X<XU7%B%B#jj6hflzc0`nrR4S_O*N3@z10G9BWWFwwnx$69r
z5cMQizQWi(M&k+f{uuFiXBpiiWn3;}AbvfbDr02zE7IGeC%9S0?J}mwuojvOkB*fw
z{Rs`>$uPNfgv)qv6r|M@hA5Rz+k^<(XyylS0TYN}3USPmW*%L5ik^VtM1=;OS4cKt
z4q2=c$pNIWhIJ}xg3ueZ3z2_2p5Zyd$Pu;^>^Fs~H?V2IFfd4;E|=j&(2T7=IUqMV

diff --git a/exercicios_String/out/production/exercicios_String/exercicio_3.class b/exercicios_String/out/production/exercicios_String/exercicio_3.class
new file mode 100644
index 0000000000000000000000000000000000000000..ce9b97ae932a6a8c26ef2e7b82133c4ae4a14c63
GIT binary patch
literal 1221
zc${riTTc@~6#k~SZOZ}+rQDSQiY>RQC@MEa5NWcaNwo>#fehPC8Eki(?UqYSeBw=i
z1mT5ec_@h{{s4cH58|1nBvsmU=gfTPo6~c?bGE<!eE$jHB{EU?;8ze(5k!bV+vEE@
zUF23F{dQ;1G+c(zg0O_U#Nbb+auI|PQ4m$p0`(ty_Nd~TC1TlCx)j$vkFeA49AUXx
z*D-l%K8!YovAie<mnSM!o+$Go-*?E;W7w9<oy5Lf;G!~@h(be$f=(4NbTP!5#A8s(
z@>I0w2a|e3E-t}^`BY9pH$#W#sJfz<&KlgZOh;DHtD+D63_f8srkk<K)$4Slh+|L+
zbBm!j*_4vXNz#yt1cn*HmU-yv!ZI1UlBt^sMKOvy3ht^HlXUHW0z->y>-K@^tni8{
z*+~^Cj8hYerd4ovy(VO&V^YNwrpaOKa%Y(o4<s|G6)D<%sn~-nfCQMKpyr|J7{U<t
zHk|@1cAgS!mw9efOFO3Xp6?V1>C|n57jxVZ@>~Z4?yjgXwCW8p<_Ruwsatn)tC{Q!
zOwf}d9(M|KJ=TOq-7_uM;dxGe{YH<-ANEEfZ#%NlSCb;MY!a!Z?%poRtXi`!H$J}M
zWv>PWG`rEPU3Cm|O~{(GhFYd&Gz{Y*y$AB+1Cwt8t&ixGCd<eM$1lLXdG5!whCDEU
zSz6UA0-oS0*$AFt?&>o806#H-ujf!YTWe_lf%xV*dM+@a`xhr_xV<q|!^m8~KO2k(
zX?yP!TT}614HFtaLFCxS&ahes%xhq#4v1@Dqz>5EKt~;@o*+cPagd!|o>C5jHKb(?
zey@fNni5$_7z*veG{q70BT9p;ViIjsPdgUTfpv5ew+oxZ*hUZb(2FuLKVbl$iF=G8
ze4$%XizSLT3XXX!kRnt$MOY#m!x5h21?dvU0hY<@qX-WD|Ey3p2^6tPy8vDhcL>TQ
d1qmrwQxIngM(Ilu_i38e`kTTsy!INg{udLU1q1*9

diff --git a/exercicios_String/out/production/exercicios_String/exercicio_4.class b/exercicios_String/out/production/exercicios_String/exercicio_4.class
new file mode 100644
index 0000000000000000000000000000000000000000..0fb46b4efc9d93f81c85fddf57b801ef2ff696b2
GIT binary patch
literal 1045
zc${@p?M@Rx6g@*1wjT?W7O<$`q9QF{Ma3_QsMMI4R5Ym}G5#Ra?O29%ck3{#_$t1I
z{3wYgK7bEpyt9B-sk_;kz4zRE&zZS1KYo7w4qyvgX$&A?!*Vc)A%^Te|G>*_9<<6Y
z8~ei33_}|-kb09LQ7rA)NHUDYL6Mg2a^2%WAXExzWNbJNhB5M2mHMXxEqsOn88A%L
zVnBxF=RqgZb*%*VD{0us8vZecLa}d1X~!_+9gJgwgoKgqE%r*u;4CtU3k+^kwxkwr
z<a76(;s?U*DDHZp-{GF-YTZp^3Kwl$a&Q^b4Ea8l80?O*+D7-Os*@FIa<@p5(S5~%
zi&=(bAP#j+27+O{SUMk_#x-2GG3Vfh3D5o;z>v{lE&M1{mE<N-WMFO*3k)!+OAeN?
zLXwo|w7EwtPkSX*_qeKy_mK!ZQTd<0k189hL@W-4@}wuj-8BZQ8aAo?s9DQ)<Tr$R
z%^Pj<<Z7YE+dEuIW1l)Ly(bSChHE`FD&+RLY4>FDZNGgZoU0b4<@>-4gK@_Qt(`k&
zgl5jV*bJ2s)u+H{Pspxsgrt9aI%L$tNO|I!Gz-Y~2wyR^FpDx>3G)nqnM*<AO|r@~
zQ#UZUa18b(hHue06gw^4rqMYGz#8t*oWfn)J5BzK1o?s0Z?NASA$3d}e1u$XvWvoE
z7c(!Gy12T%oSV;;x>#Jd2%EA9`@=IshYj>)kVKx&M1k0*F@kwyNm?%EUpwKzeLSE!
igE_3DLJA7>Zr~wRnx@=M`b$t=3XkZ|BK&d8^5hqezVWyK

diff --git a/exercicios_String/out/production/exercicios_String/exercicio_5.class b/exercicios_String/out/production/exercicios_String/exercicio_5.class
new file mode 100644
index 0000000000000000000000000000000000000000..1981cf8b6320fe95d8a9fcf555be32c4ff185363
GIT binary patch
literal 1052
zc${@pT~8B16g@**wjYa>7O<$`q9QF&iVA*EM5V^Wq@qa;iSdC<m$3}l?$+5|#J}Pn
z@L3*8qKPlQ`J;??ma0|iZZdb~o_p^(cRs%V`1}>X7PitDLd-ziL;}MM*#myaD-L&C
zmFLX^VFwJu8`71*CPS=P+A)x17>k0!KsuF%&0SZh6w=5TFini$++S51@BKiu8HS|G
zFj0>H=~bS(oiJzwO7M0y4Fg%tKgLif4h$*nXokFraZHd9FAVyNy-?Eq6`90&hVq_l
z$v{|Pn_F)b_l4C_-15VwAIKn-%JO_m_#OW3qvx+%X-wgQfr}<CVVWU7pe%#Y(JMzc
z(UW-EUO?^^>C;VIHeq3wA?b>vpe|j(FkUR3jZWh#t{Ip!ab1UJ{|#Ws1YX^HCsd8J
zCsAZzRuT(j$~t$+L>bGZNr{fbZK8SHuc@}rRYSZDg=>rI|NH}F8CW4^aU_&2ZRzc<
zF~n=$9+e-}&1{G5rcf_=(;-i;?%CYg;Y#Xt&lwN)rOz-@@2gQIcbn_OpDex}v~h%U
z)uOcg0GJ^Wogbm~GncNaPlY@DP;o72Kys!B@3yso%<l`Z=P{%kUZ`yGL~7;PKE=zr
z5N1)Km!ZEQF#R@Yyg{o9Sw=Roa02!zf^X6|964jSMWcBdfK{xKP2o1~^pZbNM1t(f
z7Z|UOkvgHBJw`4!*+pToi<xIjU0m5N=jL;zE*970giXZ>`@=Is*G#iz$mXebfo9Y6
x=;kp>(y|f%>L~~A;vU%y=CF<`DJamtf%{ZxnsPU37Nfir9?&dK_``_h(NESJ^!NY(

diff --git a/exercicios_String/out/production/exercicios_String/exercicio_6.class b/exercicios_String/out/production/exercicios_String/exercicio_6.class
new file mode 100644
index 0000000000000000000000000000000000000000..2f1721cdaee1a0b7c149c356d06e6ee38fe080a8
GIT binary patch
literal 258
zc$`g6%MQU%5IsX5)T{9ac39}nhFFkTH7tm&++H`_rrM-R{Far(!Uy;$F)a%-$(cE4
zPA2E|emnt8;W{XxY{RI-ghg;eaS>i5;=Q*FLM1bTHP*4tCWLagx3N(n)YMg_QcIm|
zhXiAm>=dEp>sT$$$3UfP5k#!C{X~jrBT}97pJ-$UeIhjczaJxlvr5jXRCAqs+`ro(
r4}=bE&Y2f+b5h1CGq2!)*}sEsyp-TDT7}3#8S7sI&qkp&3s>s{J;O55

